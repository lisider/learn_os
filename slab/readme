slab
    概念:
        slab 是 为了满足对小块内存的需求,开发出来的算法.
        buddy 中一般最小管理单位为页,如果向 buddy 申请1个字节的大小,则分配的最小的内存为1个页(4KB),极度浪费内存
        而slab 采用如下策略
            1. 从 buddy 中 申请 一些内存 (例如一个页)
            2. 将 这些内存分成更小的块管理. (最小的块可能是32个字节)
            3. 提供给其他模块 申请内存的 api.
        这样子,我 如果向 slab 申请一个字节,则slab 会给我一32个字节

        这样子,buddy 像大银行,放贷给企业(大流水). slab 像小银行一样,从大银行贷款,然后放贷给民众(小流水).

slab 实现:
    1. 基于 buddy
    2. ops
        1. 初始化
            1. 建立 32个字节(存放32字节内存块的仓库),64个字节,96个字节 ... 的空仓库
            2. 向 buddy 申请内存,填充这些仓库
            3. 在每个仓库中将各个内存块建立联系
            4. 提供ops给其他模块用
                4.1 申请
                    申请只能申请一块(不规定在哪个仓库中申请,但只能申请一块,具体要申请哪个仓库中的一块,(刚好大于申请字节的仓库))
                4.2 释放
                    释放的时候 只是 slab 中的释放,并不是说归还给 buddy

slab 与 buddy 区别
    1. buddy 管理大块内存,slab 管理小块内存
    2. 可以向 buddy 申请多个 最小单元,只能向 slab 申请一个 对应仓库中的最小单元
    3. buddy 更底层 , slab 的实现基于 buddy
    4. buddy 提供的 释放内存ops是真正的释放内存,slab提供的 释放内存ops不是真正的释放内存
