MMU:
    位置: 在CPU内部
    功能:
        1. 给软件提供一种内存保护机制
            限制某个进程对其他进程资源的访问权限
        2. 给各进程提供独立的物理地址空间
            两个进程使用同一程序.可以同时映射到不同的物理地址,可以同时运行

    OPS:
        1. 设置
        2. 开启
        3. 开启后自动提供此功能: 1. 从虚拟地址向物理地址转换 2. 权限检查
        4. 停止
    缺点:
        硬件完成的地址映射也会造成时间上的浪费

    概念:
        1. 页
            位置: 描述的是虚拟内存
            大小: 固定大小(1K,4K,64K,1M)
            描述: 虚拟地址空间被分为多个页大小的空间

        2. 页表
            位置: 存储在内存中
            数据: 一张表
            内容: 虚拟地址与物理地址的映射
            组成: 一个页表由多个页表项组成
            流程:
                1. 指令中对内存地址A进行写入一个值0x00的操作
                2. MMU去查页表,找到虚拟地址A相对应的物理地址B
                3. 然后执行 对 物理地址B 写入 0x00 的操作
                流程中有两次内存访问: 1. 对页表的访问 2. 对物理地址B的访问
            流程缺点: 相对于直接访问物理内存增加了一次页表访问.
        3. 页表项
            位置: 在页表中
            数据: 页表的最小组成单位
            描述: 一个页表项描述一个页的转换
            大小: 一个页表项大小为4个字节
            功能:
                确定虚拟地址属于哪段物理地址
                确定该段地址的访问权限
            组成:
                1. 31-20 12位 表示对应哪一个页(一个页是1M).一个页表最多可以包含1024(因为要左移两位)个页目录项.(包含多了页目录项就会冲突)
                2. 19-11 9位 不描述信息
                3. 11-10 2位 定义不同模式访问该页时的权限 // 属于权限控制低优先级
                4. 8-5   4位 定义该页所属的域(域总共有16个,每个有各自独立的访问权限) // 属于权限控制高优先级
                5. 3-2   2位 定义是否使能cache和wirte buffer
                6. 1-0   2位 用来区分页表类型(段页表还是???)

        4. TLB
            位置: MMU中 的一组寄存器
            大小: 很小
            功能: 存储最常用的页表项
            理论依据: 存储器的局部性原理
                          程序在执行过程中访问与当前位置临近的代码的概率更高一些
            流程:
                1. 指令中对内存地址A进行写入一个值0x00的操作
                2. MMU去查TLB,恰好找到虚拟地址A相对应的物理地址B
                3. 然后执行 对 物理地址B 写入 0x00 的操作
                流程中有一次内存访问: 1. 对物理地址B的访问
        5. 二级页表
            位置: 内存
            概念: 一级页表(段页表) 二级页表
            流程:
                1. 指令中对内存地址A进行写入一个值0x00的操作
                2. MMU去查一级页表,找到虚拟地址A相对应的二级页表
                3. MMU去查二级页表,找到虚拟地址A相对应的物理地址
                4. 然后执行 对 物理地址B 写入 0x00 的操作
                流程中有三次内存访问: 1. 对一级页表的访问 2. 对二级页表的访问 3. 对物理地址B的访问
            优劣:
                存储一级二级页表方案占用的内存要比存储页表方案的内存要少很多
                存储一级二级页表方案访问内存的次数要比存储页表方案访问内存的次数多一次
        6. 通过一级页表访问具体物理地址的具体操作
            1. MMU 取出虚拟地址的前12位 或上 页表基地址 ,算出页表项地址,找到对应的页表项
            2. 页表项中前12位确定了对应物理内存的起始地址,范围是1M
            3. MMU 将虚拟地址后20位 与 (页表项内容清除掉后20位的结果) 做与 ,得到物理地址
            4. 读出页表项的权限为,按照 规则(??) 去检查,如果不允许,则抛出异常.

        7. CP15
            位置: arm920t 处理器中.
            其他: arm 支持16个协处理器,在arm920t中,有两个,一个为cp14(负责系统调试),一个为cp15(负责系统控制)
            寄存器: 16个寄存器,用Cn(C0-C15)表示,32bit
                1. C1 : 开关MMU // C1寄存器的第一位为1,开MMU
                2. C2 : 存放页表基地址
                3. C3 : 存放16个域权限
        8. 协处理器
            CP0-CP7     ARM留给各生产商使用
            CP8-CP9     保留
            CP10        一般用于单精度浮点数计算
            CP11        一般用于双精度浮点数计算
            CP12-CP13   保留ARM公司以后使用
            CP14        一般用于Debug调试
            CP15        cache 缓存的管理、mmu内存的管理、中断向量的管理等

